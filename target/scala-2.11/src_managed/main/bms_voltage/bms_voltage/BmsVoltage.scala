// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package bms_voltage.bms_voltage



@SerialVersionUID(0L)
final case class BmsVoltage(
    realTime: Long,
    deviceId: Int,
    cpuTime: Long,
    voltage0: Int,
    voltage1: Int,
    voltage2: Int,
    voltage3: Int,
    voltage4: Int,
    voltage5: Int,
    voltage6: Int,
    voltage7: Int,
    voltage8: Int,
    voltage9: Int,
    voltage10: Int,
    voltage11: Int,
    voltage12: Int,
    voltage13: Int,
    voltage14: Int,
    voltage15: Int
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[BmsVoltage] with com.trueaccord.lenses.Updatable[BmsVoltage] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, realTime)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, deviceId)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(19, cpuTime)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, voltage0)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, voltage1)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(5, voltage2)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(6, voltage3)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(7, voltage4)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(8, voltage5)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(9, voltage6)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(10, voltage7)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(11, voltage8)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(12, voltage9)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(13, voltage10)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(14, voltage11)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(15, voltage12)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(16, voltage13)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(17, voltage14)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(18, voltage15)
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeInt32(1, deviceId)
      _output__.writeInt64(2, realTime)
      _output__.writeInt32(3, voltage0)
      _output__.writeInt32(4, voltage1)
      _output__.writeInt32(5, voltage2)
      _output__.writeInt32(6, voltage3)
      _output__.writeInt32(7, voltage4)
      _output__.writeInt32(8, voltage5)
      _output__.writeInt32(9, voltage6)
      _output__.writeInt32(10, voltage7)
      _output__.writeInt32(11, voltage8)
      _output__.writeInt32(12, voltage9)
      _output__.writeInt32(13, voltage10)
      _output__.writeInt32(14, voltage11)
      _output__.writeInt32(15, voltage12)
      _output__.writeInt32(16, voltage13)
      _output__.writeInt32(17, voltage14)
      _output__.writeInt32(18, voltage15)
      _output__.writeInt64(19, cpuTime)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): bms_voltage.bms_voltage.BmsVoltage = {
      var __realTime = this.realTime
      var __deviceId = this.deviceId
      var __cpuTime = this.cpuTime
      var __voltage0 = this.voltage0
      var __voltage1 = this.voltage1
      var __voltage2 = this.voltage2
      var __voltage3 = this.voltage3
      var __voltage4 = this.voltage4
      var __voltage5 = this.voltage5
      var __voltage6 = this.voltage6
      var __voltage7 = this.voltage7
      var __voltage8 = this.voltage8
      var __voltage9 = this.voltage9
      var __voltage10 = this.voltage10
      var __voltage11 = this.voltage11
      var __voltage12 = this.voltage12
      var __voltage13 = this.voltage13
      var __voltage14 = this.voltage14
      var __voltage15 = this.voltage15
      var __requiredFields0: Long = 0x7ffffL
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 16 =>
            __realTime = _input__.readInt64()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 8 =>
            __deviceId = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 152 =>
            __cpuTime = _input__.readInt64()
            __requiredFields0 &= 0xfffffffffffffffbL
          case 24 =>
            __voltage0 = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffff7L
          case 32 =>
            __voltage1 = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffffefL
          case 40 =>
            __voltage2 = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffffdfL
          case 48 =>
            __voltage3 = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffffbfL
          case 56 =>
            __voltage4 = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffff7fL
          case 64 =>
            __voltage5 = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffeffL
          case 72 =>
            __voltage6 = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffdffL
          case 80 =>
            __voltage7 = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffbffL
          case 88 =>
            __voltage8 = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffff7ffL
          case 96 =>
            __voltage9 = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffefffL
          case 104 =>
            __voltage10 = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffdfffL
          case 112 =>
            __voltage11 = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffbfffL
          case 120 =>
            __voltage12 = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffff7fffL
          case 128 =>
            __voltage13 = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffeffffL
          case 136 =>
            __voltage14 = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffdffffL
          case 144 =>
            __voltage15 = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffbffffL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      bms_voltage.bms_voltage.BmsVoltage(
          realTime = __realTime,
          deviceId = __deviceId,
          cpuTime = __cpuTime,
          voltage0 = __voltage0,
          voltage1 = __voltage1,
          voltage2 = __voltage2,
          voltage3 = __voltage3,
          voltage4 = __voltage4,
          voltage5 = __voltage5,
          voltage6 = __voltage6,
          voltage7 = __voltage7,
          voltage8 = __voltage8,
          voltage9 = __voltage9,
          voltage10 = __voltage10,
          voltage11 = __voltage11,
          voltage12 = __voltage12,
          voltage13 = __voltage13,
          voltage14 = __voltage14,
          voltage15 = __voltage15
      )
    }
    def withRealTime(__v: Long): BmsVoltage = copy(realTime = __v)
    def withDeviceId(__v: Int): BmsVoltage = copy(deviceId = __v)
    def withCpuTime(__v: Long): BmsVoltage = copy(cpuTime = __v)
    def withVoltage0(__v: Int): BmsVoltage = copy(voltage0 = __v)
    def withVoltage1(__v: Int): BmsVoltage = copy(voltage1 = __v)
    def withVoltage2(__v: Int): BmsVoltage = copy(voltage2 = __v)
    def withVoltage3(__v: Int): BmsVoltage = copy(voltage3 = __v)
    def withVoltage4(__v: Int): BmsVoltage = copy(voltage4 = __v)
    def withVoltage5(__v: Int): BmsVoltage = copy(voltage5 = __v)
    def withVoltage6(__v: Int): BmsVoltage = copy(voltage6 = __v)
    def withVoltage7(__v: Int): BmsVoltage = copy(voltage7 = __v)
    def withVoltage8(__v: Int): BmsVoltage = copy(voltage8 = __v)
    def withVoltage9(__v: Int): BmsVoltage = copy(voltage9 = __v)
    def withVoltage10(__v: Int): BmsVoltage = copy(voltage10 = __v)
    def withVoltage11(__v: Int): BmsVoltage = copy(voltage11 = __v)
    def withVoltage12(__v: Int): BmsVoltage = copy(voltage12 = __v)
    def withVoltage13(__v: Int): BmsVoltage = copy(voltage13 = __v)
    def withVoltage14(__v: Int): BmsVoltage = copy(voltage14 = __v)
    def withVoltage15(__v: Int): BmsVoltage = copy(voltage15 = __v)
    def getField(__field: _root_.com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 2 => realTime
        case 1 => deviceId
        case 19 => cpuTime
        case 3 => voltage0
        case 4 => voltage1
        case 5 => voltage2
        case 6 => voltage3
        case 7 => voltage4
        case 8 => voltage5
        case 9 => voltage6
        case 10 => voltage7
        case 11 => voltage8
        case 12 => voltage9
        case 13 => voltage10
        case 14 => voltage11
        case 15 => voltage12
        case 16 => voltage13
        case 17 => voltage14
        case 18 => voltage15
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = bms_voltage.bms_voltage.BmsVoltage
}

object BmsVoltage extends com.trueaccord.scalapb.GeneratedMessageCompanion[bms_voltage.bms_voltage.BmsVoltage] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[bms_voltage.bms_voltage.BmsVoltage] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): bms_voltage.bms_voltage.BmsVoltage = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    bms_voltage.bms_voltage.BmsVoltage(
      __fieldsMap(__fields.get(0)).asInstanceOf[Long],
      __fieldsMap(__fields.get(1)).asInstanceOf[Int],
      __fieldsMap(__fields.get(2)).asInstanceOf[Long],
      __fieldsMap(__fields.get(3)).asInstanceOf[Int],
      __fieldsMap(__fields.get(4)).asInstanceOf[Int],
      __fieldsMap(__fields.get(5)).asInstanceOf[Int],
      __fieldsMap(__fields.get(6)).asInstanceOf[Int],
      __fieldsMap(__fields.get(7)).asInstanceOf[Int],
      __fieldsMap(__fields.get(8)).asInstanceOf[Int],
      __fieldsMap(__fields.get(9)).asInstanceOf[Int],
      __fieldsMap(__fields.get(10)).asInstanceOf[Int],
      __fieldsMap(__fields.get(11)).asInstanceOf[Int],
      __fieldsMap(__fields.get(12)).asInstanceOf[Int],
      __fieldsMap(__fields.get(13)).asInstanceOf[Int],
      __fieldsMap(__fields.get(14)).asInstanceOf[Int],
      __fieldsMap(__fields.get(15)).asInstanceOf[Int],
      __fieldsMap(__fields.get(16)).asInstanceOf[Int],
      __fieldsMap(__fields.get(17)).asInstanceOf[Int],
      __fieldsMap(__fields.get(18)).asInstanceOf[Int]
    )
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = BmsVoltageProto.javaDescriptor.getMessageTypes.get(0)
  def messageCompanionForField(__field: _root_.com.google.protobuf.Descriptors.FieldDescriptor): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: _root_.com.google.protobuf.Descriptors.FieldDescriptor): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = bms_voltage.bms_voltage.BmsVoltage(
    realTime = 0L,
    deviceId = 0,
    cpuTime = 0L,
    voltage0 = 0,
    voltage1 = 0,
    voltage2 = 0,
    voltage3 = 0,
    voltage4 = 0,
    voltage5 = 0,
    voltage6 = 0,
    voltage7 = 0,
    voltage8 = 0,
    voltage9 = 0,
    voltage10 = 0,
    voltage11 = 0,
    voltage12 = 0,
    voltage13 = 0,
    voltage14 = 0,
    voltage15 = 0
  )
  implicit class BmsVoltageLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, bms_voltage.bms_voltage.BmsVoltage]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, bms_voltage.bms_voltage.BmsVoltage](_l) {
    def realTime: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.realTime)((c_, f_) => c_.copy(realTime = f_))
    def deviceId: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.deviceId)((c_, f_) => c_.copy(deviceId = f_))
    def cpuTime: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.cpuTime)((c_, f_) => c_.copy(cpuTime = f_))
    def voltage0: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage0)((c_, f_) => c_.copy(voltage0 = f_))
    def voltage1: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage1)((c_, f_) => c_.copy(voltage1 = f_))
    def voltage2: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage2)((c_, f_) => c_.copy(voltage2 = f_))
    def voltage3: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage3)((c_, f_) => c_.copy(voltage3 = f_))
    def voltage4: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage4)((c_, f_) => c_.copy(voltage4 = f_))
    def voltage5: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage5)((c_, f_) => c_.copy(voltage5 = f_))
    def voltage6: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage6)((c_, f_) => c_.copy(voltage6 = f_))
    def voltage7: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage7)((c_, f_) => c_.copy(voltage7 = f_))
    def voltage8: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage8)((c_, f_) => c_.copy(voltage8 = f_))
    def voltage9: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage9)((c_, f_) => c_.copy(voltage9 = f_))
    def voltage10: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage10)((c_, f_) => c_.copy(voltage10 = f_))
    def voltage11: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage11)((c_, f_) => c_.copy(voltage11 = f_))
    def voltage12: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage12)((c_, f_) => c_.copy(voltage12 = f_))
    def voltage13: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage13)((c_, f_) => c_.copy(voltage13 = f_))
    def voltage14: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage14)((c_, f_) => c_.copy(voltage14 = f_))
    def voltage15: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.voltage15)((c_, f_) => c_.copy(voltage15 = f_))
  }
  final val REAL_TIME_FIELD_NUMBER = 2
  final val DEVICE_ID_FIELD_NUMBER = 1
  final val CPU_TIME_FIELD_NUMBER = 19
  final val VOLTAGE_0_FIELD_NUMBER = 3
  final val VOLTAGE_1_FIELD_NUMBER = 4
  final val VOLTAGE_2_FIELD_NUMBER = 5
  final val VOLTAGE_3_FIELD_NUMBER = 6
  final val VOLTAGE_4_FIELD_NUMBER = 7
  final val VOLTAGE_5_FIELD_NUMBER = 8
  final val VOLTAGE_6_FIELD_NUMBER = 9
  final val VOLTAGE_7_FIELD_NUMBER = 10
  final val VOLTAGE_8_FIELD_NUMBER = 11
  final val VOLTAGE_9_FIELD_NUMBER = 12
  final val VOLTAGE_10_FIELD_NUMBER = 13
  final val VOLTAGE_11_FIELD_NUMBER = 14
  final val VOLTAGE_12_FIELD_NUMBER = 15
  final val VOLTAGE_13_FIELD_NUMBER = 16
  final val VOLTAGE_14_FIELD_NUMBER = 17
  final val VOLTAGE_15_FIELD_NUMBER = 18
}
